class HomeController < ApplicationController
  def index
  	
  	if !user_signed_in? 
  		redirect_to new_user_session_path
  	end

	waiting_tickets_last_events = []
	display = []

	current_profile_array = Profile.where(user_id: current_user.id)
	
	if current_profile_array == [] then
		current_profile_array = Profile.create
		current_profile_array.user_id = current_user.id
		current_profile_array.save
	end
	current_profile = current_profile_array[0]

	groups = []
	if current_profile.group_backend then groups << "Backend" end
	if current_profile.group_billing then groups << "Billing" end
	if current_profile.group_compliance then groups << "Compliance" end
	if current_profile.group_desktop_support then groups << "Desktop Support" end
	if current_profile.group_dev_relations then groups << "Dev Relations" end
	if current_profile.group_escalation then groups << "Escalation" end
	if current_profile.group_frontend then groups << "Frontend" end
	if current_profile.group_hp then groups << "HP" end
	if current_profile.group_marketing then groups << "Marketing" end
	if current_profile.group_qa_admins then groups << "QA Admins" end
	if current_profile.group_sales then groups << "Sales" end
	if current_profile.group_support then groups << "Support" end


	tag_ids = []
	if !current_profile.tag_live_chat then tag_ids << "%live_chat%" end
	if !current_profile.tag_email then tag_ids << "%email%" end
	if !current_profile.tag_claimed then tag_ids << "%claimed%" end
	if !current_profile.tag_keep_open then tag_ids << "%keep_open%" end
	if !current_profile.tag_billing then tag_ids << "%billing%" end

	ticket_status = []
	if current_profile.status_new then ticket_status << "New" end
	if current_profile.status_open then ticket_status << "Open" end
	if current_profile.status_pending then ticket_status << "Pending" end
	if current_profile.status_solved then ticket_status << "Solved" end
	if current_profile.status_closed then ticket_status << "Closed" end


	if tag_ids == [] then
		waiting_tickets_last_events = AuditEvent.include_groups(groups).where{ current_status.like_any ticket_status }.one_hour_old.last_event
	else
		waiting_tickets_last_events = AuditEvent.include_groups(groups).where{ tags.not_like_all tag_ids}.where{ current_status.like_any ticket_status }.one_hour_old.last_event
	end



	waiting_tickets_last_events.each do |waiting_ticket|
		waiting_ticket.time_since_requester_update  += (Time.now.utc - waiting_ticket.created_at)/60 if ((waiting_ticket.current_status == 'new') || (waiting_ticket.current_status == 'open'))
	end
	

	start_time_euro = Time.new(Time.now.year,Time.now.month,Time.now.day, 20,0,0, "-07:00").yesterday
	end_time_euro = Time.new(Time.now.year,Time.now.month,Time.now.day, 8,0,0, "-07:00")

	start_time_usa = Time.new(Time.now.year,Time.now.month,Time.now.day, 8,0,0, "-07:00")
	end_time_usa = Time.new(Time.now.year,Time.now.month,Time.now.day, 15,0,0, "-07:00")


	groups = ['Support']
	tag_ids = ['%claimed%','%keep_open%','%billing%','%live_chat%','%permaopen%']

	previous = ['new','open']
	current = ['pending','solved']



	@euro_current_new_met = AuditEvent.where{group_name.like groups}.where{tags.not_like_all tag_ids}.where{created_at > start_time_euro}.where{created_at < end_time_euro}.where{previous_status.like_any previous}.where{current_status.like_any current}.where{time_since_requester_update <= 60}.count

	@euro_current_new_violation = AuditEvent.where{group_name.like groups}.where{tags.not_like_all tag_ids}.where{created_at > start_time_euro}.where{created_at < end_time_euro}.where{previous_status.like_any previous}.where{current_status.like_any current}.where{time_since_requester_update > 60}.count

	@euro_current_new_total = @euro_current_new_met + @euro_current_new_violation
	@euro_current_new_percentage = (@euro_current_new_met.to_f/@euro_current_new_total.to_f) * 100

	@usa_current_new_met = AuditEvent.where{group_name.like groups}.where{tags.not_like_all tag_ids}.where{created_at > start_time_usa}.where{created_at < end_time_usa}.where{previous_status.like_any previous}.where{current_status.like_any current}.where{time_since_requester_update <= 60}.count
	@usa_current_new_violation = AuditEvent.where{group_name.like groups}.where{tags.not_like_all tag_ids}.where{created_at > start_time_usa}.where{created_at < end_time_usa}.where{previous_status.like_any previous}.where{current_status.like_any current}.where{time_since_requester_update > 60}.count


	@euro_current_new_total = @euro_current_new_met + @euro_current_new_violation





	@display = waiting_tickets_last_events.sort_by{ |k| -k["time_since_requester_update"] }
	@profile = current_profile


  end

  def update
 	@profile = Profile.find(params[:id])
 	if @profile.update_attributes(params[:profile])
      flash[:notice] = "Successfully updated product."
    end
 	
  	redirect_to :back
  end
end
